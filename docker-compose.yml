services:

  postgres:
    container_name: postgres-microservices
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - db-net
    restart: unless-stopped

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin-microservices
    ports:
      - "9411:9411"
    networks:
      - zipkin-net

  vault-server:
    image: vault:latest
    container_name: vault-microservices
    ports:
      - "8200:8200"
    cap_add:
      - IPC_LOCK
    environment:
      VAULT_ADDR: "http://0.0.0.0:8200"
      VAULT_DEV_ROOT_TOKEN_ID: "00000000-0000-0000-0000-000000000000"

  # username:guest pw:guest
  rabbitmq:
    image: rabbitmq:3.9.11-management-alpine
    container_name: rabbitmq-microservices
    ports:
      - "5672:5672"
      - "15672:15672"

  zookeeper:
    image: "bitnami/zookeeper:latest"
    container_name: "zookeeper-microservices"
    ports:
      - "2181:2181"
    environment:
     ALLOW_ANONYMOUS_LOGIN: yes

  kafka:
    image: bitnami/kafka:latest
    container_name: "kafka-microservices"
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
     KAFKA_BROKER_ID: 1
     KAFKA_LISTENERS: PLAINTEXT://:9092
     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
     ALLOW_PLAINTEXT_LISTENER: yes

  config-server:
    image: umurinan/configuration-server:1.0.0
    container_name: config-server
    ports:
      - "9090:9090"
    networks:
      - config-server-net

  service-discovery:
    image: umurinan/service-discovery:1.0.0
    container_name: service-discovery
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - config-server
      - zipkin
    networks:
      - config-server-net

  user:
    image: umurinan/user-service:1.0.0
    container_name: user-service
    ports:
      - "8080:8080"
    depends_on:
      - config-server
      - zipkin
    networks:
      - config-server-net
      - db-net
      - zipkin-net



networks:

  db-net:
    driver: bridge

  zipkin-net:
    driver: bridge
    name: microservices-zipkin

  spring:
    driver: bridge

  config-server-net:
    driver: bridge
    name: microservices-config-server



#  pgadmin:
#    container_name: pgadmin-microservices
#    image: dpage/pgadmin4
#    environment:
#      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
#      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
#      PGADMIN_CONFIG_SERVER_MODE: 'False'
#    volumes:
#      - pgadmin:/var/lib/pgadmin
#    ports:
#      - "5050:80"
#    networks:
#      - postgres
#    restart: unless-stopped

#  customer:
#    image: amigoscode/customer:latest
#    container_name: customer
#    ports:
#      - "8080:8080"
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#    networks:
#      - spring
#      - postgres
#    depends_on:
#      - zipkin
#      - postgres
#      - rabbitmq




#  fraud:
#    image: amigoscode/fraud:latest
#    container_name: fraud
#    ports:
#      - "8081:8081"
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#    networks:
#      - spring
#      - postgres
#    depends_on:
#      - zipkin
#      - postgres
#      - rabbitmq
#  notification:
#    image: amigoscode/notification:latest
#    container_name: notification
#    ports:
#      - "8082:8082"
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#    networks:
#      - spring
#      - postgres
#    depends_on:
#      - zipkin
#      - postgres
#      - rabbitmq


volumes:
  postgres:
  pgadmin: